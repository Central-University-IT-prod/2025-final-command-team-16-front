.ssh:
  image: kroniak/ssh-client:3.19
  variables:
    SSH_HOST: "REDACTED"
    SSH_USER: "ubuntu"
    SSH_ADDRESS: $SSH_USER@$SSH_HOST
  before_script:
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config && chmod 600 ~/.ssh/config
    - echo "$SSH_PRIVATE_KEY_BASE64" | base64 -d > ~/.ssh/id_rsa && chmod 400 ~/.ssh/id_rsa
    - ssh-agent sh -c "ssh-add ~/.ssh/id_rsa"
    - ssh-keyscan -H "$SSH_HOST"


.docker_run:
  extends: .ssh
  stage: deploy
  variables:
    OPT_DOCKER: ""
    DOCKERFILE_PATH: Dockerfile
    IMAGE_TAG: $CI_COMMIT_SHA
    IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_TLS_VERIFY: 1
    DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
    DOCKER_DRIVER: overlay2
    PRUNE_COMMAND: "docker system prune -f -a"
    CONTAINER_NAME_SUFFIX: ""
  script:
    - AUTH_COMMAND="echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password-stdin";
    - ssh $SSH_ADDRESS "$AUTH_COMMAND"
    - ssh $SSH_ADDRESS "docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
    - ssh $SSH_ADDRESS "docker stop $CI_PROJECT_NAME || true"
    - ssh $SSH_ADDRESS "docker rm $CI_PROJECT_NAME || true"
    - echo $CI_REGISTRY_IMAGE
    - echo $CI_COMMIT_SHA
    - scp $CI_PROJECT_DIR/docker-compose.yml $SSH_ADDRESS:~/docker-compose.yml
    - scp $CI_PROJECT_DIR/nginx.conf $SSH_ADDRESS:~/nginx.conf

    - ssh $SSH_ADDRESS "FRONT_IMAGE=$CI_REGISTRY_IMAGE FRONT_TAG=$CI_COMMIT_SHA docker compose up"
    
    # - ssh $SSH_ADDRESS "
    #   docker run -d
    #   --network=my-network
    #   --log-driver local
    #   --log-opt max-size=100m
    #   --name=$CI_PROJECT_NAME $OPT_DOCKER
    #   $IMAGE_NAME"
    - ssh $SSH_ADDRESS "$PRUNE_COMMAND"
